"use strict";var precacheConfig=[["/index.html","beb1d1eb9bbc163bede4813c58132cee"],["/static/css/main.1f20444f.css","e97e71e808dca7e57efa43147eeb9c57"],["/static/js/main.c31b5bab.js","af321860fa6dd0920799eb5579d5cf4c"],["/static/media/card.511859d9.png","511859d9264607d2c28dba411760bcb3"],["/static/media/contextualing.e39a31d4.png","e39a31d47df196d046d4bff09aeadf1b"],["/static/media/designProcess.7862c5ed.png","7862c5ed247fbca6666d41efd1b259ad"],["/static/media/folders.efe483d1.png","efe483d12ddfc81b6faf4bffdbcc39fb"],["/static/media/keystone-architecture.8bc50437.jpeg","8bc504378cc10318e0c4998795f6397b"],["/static/media/logo.61e9b138.svg","61e9b13862c981e1e7a6b080ca314017"],["/static/media/personamockup.0bcbd20c.png","0bcbd20c9ee021184c1cbb879c28c4a7"],["/static/media/pieces.214c536a.png","214c536ac27ebd52c98e58c969eacb2c"],["/static/media/pncsb00.d2c9583b.jpg","d2c9583b4072ed315a4244ed4f0c656a"],["/static/media/pncsb01.039cb536.jpg","039cb53663e68c13389eb12fc4007ce8"],["/static/media/pncsb02.c8f33b22.jpg","c8f33b22e82304c32cae331e6a241575"],["/static/media/pncsb03.7713cf44.jpg","7713cf44d2661b0855ded581d8cb170b"],["/static/media/pncthumbnail.6d0f4257.png","6d0f42575857f3d10c49aa033585faef"],["/static/media/proto.6bb91637.png","6bb91637ba5a03abcc4e9d2119e6469e"],["/static/media/storyboard.2b83f4bc.jpg","2b83f4bc496d227a511f80aca1632757"],["/static/media/title.b506f563.svg","b506f563d513a9b56c960bab5820686d"],["/static/media/tmo.15aedf9b.gif","15aedf9bb3751d084715329a54a0ea68"],["/static/media/tmo2.4c4c1def.gif","4c4c1defaeb046549cbd3c5fb70436c6"],["/static/media/ut.a33e7380.jpg","a33e7380d2b428fe8a928978d6fdef37"],["/static/media/validating.d9c87521.png","d9c87521a30aa3517403bba16a08de80"],["/static/media/visioning.a2d80b21.png","a2d80b2101deeef268bdf757cbe060ab"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],c=new URL(t,self.location),n=createCacheKey(c,hashParamName,a,/\.\w{8}\./);return[c.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(c){return setOfCachedUrls(c).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return c.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),c="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,c),e=urlsToCacheKeys.has(a));var n="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(n,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});